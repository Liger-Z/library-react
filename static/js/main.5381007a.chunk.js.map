{"version":3,"sources":["components/Header.js","components/Form.js","components/Books.js","components/AddTab.js","components/FilterTab.js","components/SortTab.js","components/OptionBar.js","App.js","index.js"],"names":["Header","className","onClick","event","optionBar","document","querySelector","classList","toggle","target","add","setTimeout","remove","Form","props","handleChange","setBook","prevState","name","completed","value","onSubmit","preventDefault","addBook","clearBook","type","book","title","onChange","required","author","min","pages","Books","useState","bookList","setBookList","findBookIndex","bookTitle","parentNode","attributes","nodeValue","bookAuthor","bookPages","findIndex","item","removeBook","index","newBookList","splice","toggleCompleted","newBook","bookItems","map","attribute-title","attribute-author","attribute-pages","key","Math","floor","random","alt","push","console","log","AddBook","showForm","toggleClassClicked","FilterBook","SortBook","OptionBar","AddTab","FilterTab","SortTab","App","id","ReactDom","render","getElementById"],"mappings":"0MA0BeA,MAxBf,WAgBE,OACE,yBAAKC,UAAU,eACb,wBAAIA,UAAU,gBAAd,mBACA,4BAAQA,UAAU,cAAcC,QAhBhB,SAACC,GACnB,IAAMC,EAAYC,SAASC,cAAc,eACzCF,EAAUG,UAAUC,OAAO,YAC3BJ,EAAUG,UAAUC,OAAO,WAE3B,IAAMC,EAASN,EAAMM,OACrBA,EAAOF,UAAUG,IAAI,WACrBC,YAAW,WACTF,EAAOF,UAAUK,OAAO,aACvB,U,4BC8DQC,MA1Ef,SAAcC,GACZ,IAAMC,EAAe,SAAAZ,GACnB,IAAMM,EAASN,EAAMM,OAErBK,EAAME,SAAQ,SAAAC,GACZ,OAAO,2BAAIA,GAAX,kBAAuBR,EAAOS,KAAuB,cAAhBT,EAAOS,MAAwBD,EAAUE,UAAYV,EAAOW,YAWrG,OACE,yBAAKnB,UAAU,yBACb,wBAAIA,UAAU,cAAd,YAEA,0BAAMA,UAAU,gBAAgBoB,SAXf,SAAAlB,GACnBA,EAAMmB,iBAENR,EAAMS,UACNT,EAAMU,cAQF,uCAEE,6BACA,2BACEC,KAAK,OACLP,KAAK,QACLE,MAAON,EAAMY,KAAKC,MAClBC,SAAUb,EACVc,UAAQ,KAEJ,6BAER,wCAEE,6BACA,2BACEJ,KAAK,OACLP,KAAK,SACLE,MAAON,EAAMY,KAAKI,OAClBF,SAAUb,EACVc,UAAQ,KAEJ,6BAER,uCAEE,6BACA,2BACEJ,KAAK,SACLP,KAAK,QACLa,IAAI,IACJX,MAAON,EAAMY,KAAKM,MAClBJ,SAAUb,EACVc,UAAQ,KAEJ,6BAER,2BAAO5B,UAAU,iBAAjB,YAEE,2BACEwB,KAAK,WACLP,KAAK,YACLE,MAAON,EAAMY,KAAKP,UAClBS,SAAUb,KAId,4BAAQd,UAAU,iBAAlB,UCsCOgC,MAzGf,WAAiB,MAGiBC,mBAAS,IAH1B,mBAGRC,EAHQ,KAGEC,EAHF,OAISF,mBAAS,CAC/BP,MAAO,GACPG,OAAQ,GACRE,MAAO,EACPb,WAAW,IARE,mBAIRO,EAJQ,KAIFV,EAJE,KA6Bf,SAASqB,EAAclC,GACrB,IAAMM,EAASN,EAAMM,OACf6B,EAAa7B,EAAO8B,WAAWA,WAAWC,WAAW,GAAGC,UACxDC,EAAcjC,EAAO8B,WAAWA,WAAWC,WAAW,GAAGC,UACzDE,EAAalC,EAAO8B,WAAWA,WAAWC,WAAW,GAAGC,UAK9D,OAJcN,EAASS,WAAU,SAAAC,GAC/B,OAAOA,EAAKlB,QAAUW,GAAaO,EAAKf,SAAWY,GAAcG,EAAKb,QAAUW,KAMpF,SAASG,EAAW3C,GAClB,IAAM4C,EAAQV,EAAclC,GAExB6C,EAAW,YAAOb,GACtBa,EAAYC,OAAOF,EAAO,GAC1BX,EAAYY,GAGd,SAASE,EAAgB/C,GACvB,IAAM4C,EAAQV,EAAclC,GACtBuB,EAAOS,EAASY,GAChBI,EAAO,2BAAQzB,GAAR,IAAcP,WAAYO,EAAKP,YACtC6B,EAAW,YAAQb,GACzBa,EAAYD,GAASI,EAErBf,EAAYY,GAGd,IAAMI,EAAYjB,EAASkB,KAAI,SAAAR,GAC7B,OACE,yBACA5C,UAAW4C,EAAK1B,UAAY,8BAAgC,oBAC5DmC,kBAAiBT,EAAKlB,MACtB4B,mBAAkBV,EAAKf,OACvB0B,kBAAiBX,EAAKb,MACtByB,IAAG,UAAKZ,EAAKlB,MAAV,YAAmB+B,KAAKC,MAAoB,SAAdD,KAAKE,UAEpC,4BACE,sCAAYf,EAAKlB,OACjB,uCAAakB,EAAKf,QAClB,sCAAYe,EAAKb,QAGnB,yBAAK/B,UAAU,uBACb,4BACAA,UAAW4C,EAAK1B,UAAY,6BAA+B,mBAC3DjB,QAASgD,GACNL,EAAK1B,UAAY,OAAS,UAG7B,4BACAlB,UAAU,gBACV4D,IAAI,gBACJ3D,QAAS4C,SAOjB,OACE,yBAAK7C,UAAU,iBACb,kBAAC,EAAD,CACAyB,KAAMA,EACNV,QAASA,EACTO,QArFJ,WACE,IAAMyB,EAAW,YAAOb,GACxBa,EAAYc,KAAKpC,GACjBqC,QAAQC,IAAIhB,GACZZ,EAAYY,IAkFVxB,UA/EJ,WACIR,GAAQ,SAAAC,GACJ,MAAO,CACPU,MAAO,GACPG,OAAQ,GACRE,MAAO,EACPb,WAAW,SA4EfiC,ICvFSa,MAdf,SAAiBnD,GACf,IAKMoD,EAAW,WACF7D,SAASC,cAAc,iBAC/BC,UAAUC,OAAO,aAGxB,OAAO,4BAAQN,QAVK,SAAAC,GAClBW,EAAMqD,mBAAmBhE,GACzB+D,KAQmCjE,UAAU,iBAAxC,QCHMmE,MARf,SAAoBtD,GAKlB,OAAO,4BAAQZ,QAJK,SAAAC,GAClBW,EAAMqD,mBAAmBhE,IAGUF,UAAU,iBAAxC,WCGMoE,MARf,SAAkBvD,GAKhB,OAAO,4BAAQZ,QAJK,SAAAC,GAClBW,EAAMqD,mBAAmBhE,IAGUF,UAAU,iBAAxC,SCaMqE,MAff,WACE,IAAMH,EAAqB,SAAAhE,GACVA,EAAMM,OACdF,UAAUC,OAAO,YAG1B,OACE,yBAAKP,UAAU,uBACb,kBAACsE,EAAD,CAAQJ,mBAAoBA,IAC5B,kBAACK,EAAD,CAAWL,mBAAoBA,IAC/B,kBAACM,EAAD,CAASN,mBAAoBA,MCApBO,MAVf,WACE,OACE,yBAAKC,GAAG,WACN,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,YCHNC,IAASC,OAAO,kBAAC,EAAD,MAASxE,SAASyE,eAAe,U","file":"static/js/main.5381007a.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  // add and remove clicked class for animation purposes\n  \n  const handleClick = (event) => {\n    const optionBar = document.querySelector(\".option-bar\");\n    optionBar.classList.toggle('inactive');\n    optionBar.classList.toggle('animate');\n\n    const target = event.target;\n    target.classList.add('clicked');\n    setTimeout(() => {\n      target.classList.remove('clicked')\n    }, 150)\n\n  };\n\n  return (\n    <div className=\"site-header\">\n      <h1 className=\"header-title\">Liger's Library</h1>\n      <button className=\"menu-button\" onClick={handleClick}></button>\n    </div>\n  );\n};\n\nexport default Header;","import React from 'react';\n\nfunction Form(props) {\n  const handleChange = event => {\n    const target = event.target;\n    \n    props.setBook(prevState => {\n      return {...prevState, [target.name]: target.name === \"completed\" ? !prevState.completed : target.value}\n    })\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    props.addBook();\n    props.clearBook();\n  }\n\n  return (\n    <div className=\"form-wrapper inactive\">\n      <h1 className=\"form-title\">Add Book</h1>\n\n      <form className=\"add-book-form\" onSubmit={handleSubmit}>\n        <label>\n          Title\n          <br />\n          <input \n            type=\"text\" \n            name=\"title\"\n            value={props.book.title}\n            onChange={handleChange}\n            required\n          />\n        </label><br />\n\n        <label>\n          Author\n          <br />\n          <input \n            type=\"text\"\n            name=\"author\"\n            value={props.book.author}\n            onChange={handleChange}\n            required\n          />\n        </label><br />\n\n        <label>\n          Pages\n          <br />\n          <input\n            type=\"number\"\n            name=\"pages\"\n            min=\"1\"\n            value={props.book.pages}\n            onChange={handleChange}\n            required\n          />\n        </label><br />\n\n        <label className=\"form-checkbox\">\n          Completed\n          <input\n            type=\"checkbox\"\n            name=\"completed\"\n            value={props.book.completed}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button className=\"submit-button\">Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;","import React, { useState } from 'react';\nimport Form from './Form';\n\nfunction Books() {\n  //TODO: Add Read status functionality\n\n  const [bookList, setBookList] = useState([]);\n  const [book, setBook] = useState({\n    title: \"\",\n    author: \"\",\n    pages: 1,\n    completed: false,\n  });\n\n  function addBook() {\n    const newBookList = [...bookList];\n    newBookList.push(book);\n    console.log(newBookList);\n    setBookList(newBookList);\n  };\n\n  function clearBook() {\n      setBook(prevState => {\n          return {\n          title: \"\",\n          author: \"\",\n          pages: 1,\n          completed: false,\n        }\n      });\n  };\n\n  function findBookIndex(event) {\n    const target = event.target;\n    const bookTitle = (target.parentNode.parentNode.attributes[1].nodeValue);\n    const bookAuthor = (target.parentNode.parentNode.attributes[2].nodeValue);\n    const bookPages = (target.parentNode.parentNode.attributes[3].nodeValue)\n    const index = bookList.findIndex(item => {\n      return item.title === bookTitle && item.author === bookAuthor && item.pages === bookPages;\n    });\n\n    return index;\n  }\n\n  function removeBook(event) {\n    const index = findBookIndex(event);\n\n    let newBookList = [...bookList];\n    newBookList.splice(index, 1);\n    setBookList(newBookList);\n  };\n\n  function toggleCompleted(event) {\n    const index = findBookIndex(event);\n    const book = bookList[index];\n    const newBook = { ...book, completed: !book.completed };\n    const newBookList = [ ...bookList ];\n    newBookList[index] = newBook;\n    \n    setBookList(newBookList);\n  };\n\n  const bookItems = bookList.map(item => {\n    return (\n      <div \n      className={item.completed ? \"book-list-wrapper completed\" : \"book-list-wrapper\"} \n      attribute-title={item.title}\n      attribute-author={item.author}\n      attribute-pages={item.pages} \n      key={`${item.title} ${Math.floor(Math.random * 99999999)}`}\n      >\n        <ul>\n          <li>Title: {item.title}</li>\n          <li>Author: {item.author}</li>\n          <li>Pages: {item.pages}</li>\n        </ul>\n\n        <div className=\"book-button-wrapper\">\n          <button \n          className={item.completed ? \"completed-button completed\" : \"completed-button\"} \n          onClick={toggleCompleted}>\n            {item.completed ? \"Read\" : \"Unread\"}\n          </button>\n\n          <button \n          className=\"remove-button\" \n          alt=\"remove button\" \n          onClick={removeBook}>\n          </button>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"books-wrapper\">\n      <Form \n      book={book} \n      setBook={setBook}  \n      addBook={addBook} \n      clearBook={clearBook} \n      />\n\n     {bookItems}\n    </div>\n  );\n};\n\nexport default Books;","import React from 'react';\n\nfunction AddBook(props) {\n  const handleClick = event => {\n    props.toggleClassClicked(event);\n    showForm();\n  };\n\n  const showForm = () => {\n    const form = document.querySelector('.form-wrapper')\n    form.classList.toggle('inactive');\n  }\n\n  return <button onClick={handleClick} className=\"option-button\">Add</button>\n}\n\nexport default AddBook;","import React from 'react';\n\nfunction FilterBook(props) {\n  const handleClick = event => {\n    props.toggleClassClicked(event);\n  };\n\n  return <button onClick={handleClick} className=\"option-button\">Filter</button>\n}\n\nexport default FilterBook;","import React from 'react';\n\nfunction SortBook(props) {\n  const handleClick = event => {\n    props.toggleClassClicked(event);\n  };\n\n  return <button onClick={handleClick} className=\"option-button\">Sort</button>\n}\n\nexport default SortBook;","import React from 'react';\nimport AddTab from './AddTab';\nimport FilterTab from './FilterTab';\nimport SortTab from './SortTab';\n\nfunction OptionBar() {\n  const toggleClassClicked = event => {\n    const target = event.target;\n    target.classList.toggle(\"clicked\")\n  }\n\n  return (\n    <div className=\"option-bar inactive\">\n      <AddTab toggleClassClicked={toggleClassClicked}/>\n      <FilterTab toggleClassClicked={toggleClassClicked}/>\n      <SortTab toggleClassClicked={toggleClassClicked}/>\n    </div>\n  )\n}\n\nexport default OptionBar;","import React from 'react';\nimport Header from './components/Header';\nimport Books from './components/Books';\nimport OptionBar from './components/OptionBar';\n\nfunction App() {\n  return (\n    <div id=\"content\">\n      <Header />\n      <OptionBar />\n      <Books />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\nimport './reset.css';\nimport './index.css';\n\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}